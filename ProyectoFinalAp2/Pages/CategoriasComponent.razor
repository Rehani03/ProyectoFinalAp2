@page "/Categorias"
@using ProyectoFinalAp2.Models
@using ProyectoFinalAp2.Controllers
@using ProyectoFinalAp2.Data

@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Registo de Categorias</h3>

<style>
    .form-group {
        color: black;
    }
</style>


<EditForm Model="categorias" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    
    <label for="Id">ID</label>
    <div class="input-group">
        <InputNumber @bind-Value="categorias.CategoriaId" class="form-control"></InputNumber>
        <ValidationMessage For="(() => categorias.CategoriaId)"></ValidationMessage>
        <div class="input-group-append">
            <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
        </div>
    </div>

    <div class="form-group">
        <label for="Descripcion">Descripción</label>
        <InputText @bind-Value="categorias.Descripcion" class="form-control"></InputText>
        <ValidationMessage For="(() => categorias.Descripcion)"></ValidationMessage>
    </div>

    <div class="form-group">
        <button type="button" class="btn btn-secondary" @onclick="Nuevo">
            Nuevo
        </button>
        <button type="submit" class="btn btn-success" @onclick="Guardar">
            Guardar
        </button>
        <button type="button" class="btn btn-danger" @onclick="Eliminar">
            Eliminar
        </button>

    </div>

    <h3>@estado</h3>

</EditForm>


@code {

    Categorias categorias = new Categorias();
    private string estado;


    public bool ExisteEnLaBaseDeDatos(int id)
    {
        CategoriaControllers control = new CategoriaControllers();
        var encontrado = control.Buscar(id);
        bool paso = true;

        if (encontrado == null)
        {
            paso = false;
        }

        return paso;
    }

    public bool ExisteEnLaBaseDeDatos()
    {
        CategoriaControllers control = new CategoriaControllers();
        Categorias encontrado = control.Buscar(categorias.CategoriaId);

        return (encontrado != null);
    }

    void Nuevo()
    {
        this.categorias = new Categorias();
        estado = "";
    }

    void Guardar()
    {
        CategoriaControllers control = new CategoriaControllers();
        bool paso = true;
        if (categorias.CategoriaId == 0)
        {
            paso = control.Guardar(categorias);

        }
        else
        {
            if(ExisteEnLaBaseDeDatos())
            {
                paso = control.Modificar(categorias);
            }
        }

        if (paso)
        {
            estado = "Guardado Correctamente..";
        }

    }

    void Eliminar()
    {
        bool paso= true;
        CategoriaControllers control = new CategoriaControllers();

        
        paso = control.Eliminar(categorias.CategoriaId);

        

        if (paso)
        {
            Nuevo();
            estado = "Eliminado Correctamente...";
        }


    }

    void Buscar()
    {
        estado = "";
        CategoriaControllers control = new CategoriaControllers();
        Categorias auxCategoria = control.Buscar(categorias.CategoriaId);

        if (auxCategoria != null)
        {
            this.categorias = auxCategoria;
        }
        else
        {
            this.categorias.Descripcion = "";
            estado = "No encontrado...";
        }

    }

}
